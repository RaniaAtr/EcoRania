security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        # Authentification par login (JWT)
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Routes API protégées par token JWT
        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

        # Routes publiques si besoin
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

    access_control:
     # Autoriser l'inscription
    - { path: ^/api/users/create, roles: PUBLIC_ACCESS }

    # Autoriser le login JWT
    - { path: ^/api/login_check, roles: PUBLIC_ACCESS }

    # Autoriser tout le monde (même non connecté) à consulter la liste et le détail des activités
    - { path: ^/api/activities, roles: PUBLIC_ACCESS }

    # Route pour consulter ses propres infos
    - { path: ^/api/users/me$, roles: ROLE_USER }

    # Autoriser les utilisateurs connectés à modifier/supprimer leur compte via ID
    - { path: ^/api/users/\d+$, roles: ROLE_USER }

    # Autoriser l'admin à lister tous les utilisateurs et supprimer n'importe quel compte
    - { path: ^/api/users$, roles: ROLE_ADMIN } # Liste des utilisateurs
    - { path: ^/api/users/\d+, roles: ROLE_ADMIN } # Suppression d'un utilisateur

    # Autoriser uniquement les admins à modifier les rôles des utilisateurs
    - { path: ^/api/admin/users/\d+/roles, roles: ROLE_ADMIN }

    # Routes d'administration 
    - { path: ^/api/admin, roles: ROLE_ADMIN }


    # Toute autre route API nécessite un token valide
     #- { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

